%!PS-Adobe-3.0
%%Title: bin_class.py
%%For: root
%%Creator: a2ps version 4.14
%%CreationDate: Sun Sep 19 06:09:44 2021
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black Blue Green Red 
%%DocumentSuppliedResources: procset a2ps-color-prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  0 setgray
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.5 0.5 1 setrgbcolor
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    1 setgray
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def
%%BeginResource: procset a2ps-color-prolog 2.0 1

%% Definition of the color faces.
/p {
  0 0 0 FG
  false BG
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  0 0 0 FG
  false BG
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false BG
  false UL
  false BX
  0 0 0.9 FG
  fCourier bfs scalefont setfont
  Show
} bind def

/K {
  false BG
  false UL
  false BX
  0 0 0.8 FG
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false BG
  false UL
  false BX
  0.8 0 0 FG
  fCourier bfs scalefont setfont
  Show
} bind def

/C {
  false BG
  false UL
  false BX
  0.8 0 0 FG
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/l {
  0 0 0 FG
  0.8 0.8 0 true BG
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/L {
  0 0 0 FG
  1 1 0 true BG
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/str {
  false BG
  false UL
  false BX
  0 0.5 0 FG
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  1 0 0 true BG
  false UL
  true BX
  1 1 1 FG
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul 2 div neg 0 rmoveto
    f# setfont
    0.8 0.1 0.1 FG
    c-show
  grestore
} bind def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 6 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(""") p n
(Amaan Rahman) str n
(ECE 472: Deep Learning) N
(Assigment 2: Binary Classification) N
(""") p n
() N
(import) K
( matplotlib.pyplot as plt) p n
(import) K
( numpy as np) p n
(import) K
( tensorflow as tf) p n
(from) K
( tqdm ) p
(import) K
( trange) p n
() N
(# ---- Global Variables ----) c n
(NUM_SAMPLES = 500) p n
(BATCH_SIZE = 32) N
(NUM_ITR = 2000) N
(SEED = 1618) N
(SIGMA_NOISE = 0.1) N
(ROT_NUM = 2) N
() N
(# class for generating data) c n
(class) K
( Data\(object\):) p n
(    ) S
(def) K
( __init__\(self, num_samples, sigma, id, attr\):) p n
() N
(        ) S
(# spiral attributes) c n
(        theta = np.random.uniform\(attr[") p
(min) str
("], attr[") p
(max) str
("], size=\(num_samples\)\)) p n
(        spiral = self.Spiral\(attr[") S
(center) str
("], attr[") p
(gap) str
("], theta, 1\)) p n
() N
(        ) S
(# generate data) c n
(        factor = 1 ) p
(if) K
( id == 1 ) p
(else) K
( -1) p n
(        noise = sigma * np.random.normal\(size=\(num_samples\)\)  ) S
(# gaussian noise) c n
(        self.x = \() p n
(            factor * spiral.r * np.cos\(theta\) / 1.5 + noise) N
(        \)  ) S
(# arbitrary scaling factor) c n
(        self.y = factor * spiral.r * np.sin\(theta\) + noise) p n
() N
(        self.spiral = spiral._data\(\(self.x, self.y, [id] * num_samples\)\)) N
() N
(    ) S
(def) K
( _init_input\(self, data\):) p n
(        self.data = tf.constant\(data[0 : data.shape[0] - 1], dtype=np.float32\)) N
(        self.labels = tf.constant\() N
(            data[data.shape[0] - 1], shape=[1, data.shape[1]], dtype=np.float32) N
(        \)) N
() N
(    ) S
(def) K
( _batchGet\(self, batch_size\):) p n
(        self.index = NUM_SAMPLES * 2) N
(        rand_ind = np.random.choice\(self.index, size=batch_size\)) N
(        batch_data = tf.squeeze\(tf.gather\(self.data, rand_ind, axis=1\)\)) N
(        batch_labels = tf.squeeze\(tf.gather\(self.labels, rand_ind, axis=1\)\)) N
() N
(        ) S
(# normalize data) c n
(        ) p
(return) K
( \() p n
(            batch_data,) N
(            batch_labels,) N
(        \)) N
() N
(    ) S
(# https://en.wikipedia.org/wiki/Archimedean_spiral) c n
(    ) p
(class) K
( Spiral\(object\):) p n
(        ) S
(def) K
( __init__\(self, a, b, theta, n\):) p n
(            self.r = a + b * \(theta ** \(1 / n\)\)) N
() N
(        ) S
(def) K
( _data\(self, xy_dat\):) p n
(            self.data = xy_dat) N
(bin_class.py) (Page 1/4) (Sep 19, 21 5:47) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            ) p
(return) K
( self) p n
() N
() N
(class) K
( MLP\(tf.Module\):) p n
(    ) S
(def) K
( __init__\(self, X_features, depth, width_arr\):) p n
(        self.W = [None] * depth) N
(        self.B = [None] * depth) N
(        ) S
(for) K
( width, k ) p
(in) K
( zip\(width_arr, range\(1, depth + 1\)\):) p n
(            self.W[k - 1] = tf.Variable\() N
(                0.2 * tf.random.normal\(shape=[X_features, width]\),) N
(                name=\(") S
(WEIGHTS_) str
(" + str\(k\)\),) p n
(                dtype=np.float32,) N
(            \)) N
(            self.B[k - 1] = tf.Variable\() N
(                0.001 * tf.ones\(shape=[width, 1]\),) N
(                name=\(") S
(BIAS_) str
(" + str\(k\)\),) p n
(                dtype=np.float32,) N
(            \)) N
() N
(            X_features = width) N
() N
(    ) S
(def) K
( __call__\(self, X\):  ) p
(# output from current layer) c n
(        X_k = X) p n
(        ) S
(for) K
( W_k, B_k ) p
(in) K
( zip\(self.W, self.B\):) p n
(            func = tf.nn.relu ) S
(if) K
( W_k.shape[1] != 1 ) p
(else) K
( tf.nn.sigmoid) p n
(            self.Z = tf.squeeze\(func\(\(\(tf.transpose\(W_k\) @ X_k\) + B_k\)\)\)) N
(            X_k = tf.squeeze\(self.Z\)) N
(        ) S
(return) K
( self.Z  ) p
(# output is the predicted probabilities for input batch) c n
() p n
() N
(def) K
( train\(data, model\):) p n
(    optimizer = tf.optimizers.Adam\(\)) N
(    bar = trange\(NUM_ITR\)) N
(    loss_dat = [0] * NUM_ITR) N
(    ) S
(for) K
( i ) p
(in) K
( bar:) p n
(        with tf.GradientTape\(\) as tape:) N
(            X, y_true = data._batchGet\(BATCH_SIZE\)) N
(            y_hat = model\(X\)) N
(            loss_dat[i] = tf.losses.binary_crossentropy\(y_true, y_hat\)) N
() N
(        grads = tape.gradient\(loss_dat[i], model.trainable_variables\)) N
(        optimizer.apply_gradients\(zip\(grads, model.trainable_variables\)\)) N
(        bar.set_description\(f") S
(Loss @ {i} => {loss_dat[i].numpy\(\):0.6f}) str
("\)) p n
(        bar.refresh\(\)) N
() N
(    ) S
(return) K
( loss_dat) p n
() N
() N
(# https://machinelearningmastery.com/plot-a-decision-surface-for-machine-learnin) c n
(g/) N
(def) K
( decision_surf\(data, model\):) p n
(    min1, max1 = data[0, :].min\(\) - 1, data[0, :].max\(\) + 1) N
(    min2, max2 = data[1, :].min\(\) - 1, data[1, :].max\(\) + 1) N
() N
(    x1grid = np.arange\(min1, max1, 0.1\)) N
(    x2grid = np.arange\(min2, max2, 0.1\)) N
(    X, Y = np.meshgrid\(x1grid, x2grid\)) N
(    r1, r2 = X.flatten\(\), Y.flatten\(\)) N
(    r1, r2 = r1.reshape\(\(1, len\(r1\)\)\), r2.reshape\(\(1, len\(r2\)\)\)) N
(    G = np.vstack\(\(r1, r2\)\)) N
(    Z = tf.reshape\(model\(G\), shape=X.shape\)) N
(    ) S
(return) K
( \(X, Y, Z\)) p n
(bin_class.py) (Page 2/4) (Sep 19, 21 5:47) title
border
grestore
(Printed by root) rhead
(bin_class.py) (1/2) (Sunday September 19, 2021) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() N
(# very messy data object setup :/) c n
(# generating 2 seperate data objects) N
(def) K
( main\(\):) p n
(    np.random.seed\(SEED\)) N
(    ) S
(# generate 2 Archimidean spirals) c n
(    dataset = \() p n
(        Data\() N
(            NUM_SAMPLES,) N
(            SIGMA_NOISE,) N
(            1,) N
(            {") S
(min) str
(": -ROT_NUM * 2 * np.pi + 0.1, ") p
(max) str
(": -0.1, ") p
(center) str
(": -1, ") p
(gap) str
(": 1) p n
(},) N
(        \),) N
(        Data\() N
(            NUM_SAMPLES,) N
(            SIGMA_NOISE,) N
(            0,) N
(            {") S
(min) str
(": -ROT_NUM * 2 * np.pi + 0.1, ") p
(max) str
(": -0.1, ") p
(center) str
(": -1, ") p
(gap) str
(": 1) p n
(},) N
(        \),) N
(    \)) N
() N
(    spiral_A = list\() N
(        zip\() N
(            dataset[0].spiral.data[0],) N
(            dataset[0].spiral.data[1],) N
(            dataset[0].spiral.data[2],) N
(        \)) N
(    \)) N
(    spiral_B = list\() N
(        zip\() N
(            dataset[1].spiral.data[0],) N
(            dataset[1].spiral.data[1],) N
(            dataset[1].spiral.data[2],) N
(        \)) N
(    \)) N
(    input_data = np.concatenate\(\(spiral_A, spiral_B\), axis=0\)) N
(    dataset[0]._init_input\(input_data.T\)) N
(    mlp_model = MLP\(dataset[0].data.shape[0], 8, [100, 75, 50, 25, 50, 75, 100, ) N
(1]\)) N
(    train\(dataset[0], mlp_model\)) N
(    prob_surf = decision_surf\(dataset[0].data.numpy\(\), mlp_model\)) N
() N
(    ) S
(# https://stackoverflow.com/questions/49991227/pandas-matplotlib-plot-a-bar-) c n
(graph-on-existing-scatter-plot-or-vice-versa) N
(    fig = plt.figure\(figsize=\(5, 3\), dpi=200\)) p n
(    ax = fig.add_subplot\(111\)) N
(    ax.contour\(*prob_surf, cmap=") S
(RdPu) str
(", linestyles=") p
(solid) str
(", levels=1\)) p n
(    ax.scatter\() N
(        input_data[0:NUM_SAMPLES, 0],) N
(        input_data[0:NUM_SAMPLES, 1],) N
(        c=") S
(r) str
(",) p n
(        edgecolors=") S
(k) str
(",) p n
(    \)) N
(    ax.scatter\() N
(        input_data[NUM_SAMPLES:, 0], input_data[NUM_SAMPLES:, 1], c=") S
(b) str
(", edgecol) p n
(ors=") S
(k) str
(") p n
(    \)) N
(    ax.set_title\(") S
(Spirals Dataset & Classification Boundary) str
("\)) p n
(    ax.set\(xlabel=") S
(x-values) str
(", ylabel=") p
(y-values) str
("\)) p n
(bin_class.py) (Page 3/4) (Sep 19, 21 5:47) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    plt.savefig\(") p
(output1.pdf) str
("\)) p n
() N
() N
(if) K
( __name__ == ") p
(__main__) str
(":) p n
(    main\(\)) N
(bin_class.py) (Page 4/4) (Sep 19, 21 5:47) title
border
grestore
(Printed by root) rhead
(bin_class.py) (2/2) (Sunday September 19, 2021) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
